name: Deploy releases as artefacts

on: [push]

jobs:
  quality-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.x]
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run lint
      - run: echo "🍏 lint is ${{ job.status }}."

  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.x]
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run test:unit
      - run: echo "🍏 test is ${{ job.status }}."

  deploy-apk:
    runs-on: ubuntu-latest
    needs: [quality-check, unit-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Release APK on GitHub
        uses: actions/upload-release-asset@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest
          path: ./releases/ionic-release.apk

  deploy-dmg:
    runs-on: ubuntu-latest
    needs: [quality-check, unit-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Release DMG on GitHub
        uses: actions/upload-release-asset@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest
          path: ./releases/electron-release.dmg
         