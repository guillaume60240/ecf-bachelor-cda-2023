name: Deploy releases as artefacts

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_APK: release-android-app-latest
  IMAGE_NAME_IOS: release-ios-app-latest

jobs:
  quality-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.x]
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run lint
      - run: echo "üçè lint is ${{ job.status }}."

  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.x]
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run test:unit
      - run: echo "üçè test is ${{ job.status }}."

  deploy-apk:
    runs-on: ubuntu-latest
    needs: [quality-check, unit-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push files
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.IMAGE_NAME_APK }}
          path: ./releases/ionic-release.apk

  deploy-dmg:
    runs-on: ubuntu-latest
    needs: [quality-check, unit-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push files
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.IMAGE_NAME_IOS }}
          path: ./releases/electron-release.dmg
         